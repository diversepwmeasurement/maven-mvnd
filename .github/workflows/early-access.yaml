concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}
env:
  JAVA_VERSION: '17'
jobs:
  default-build:
    if: startsWith(github.event.head_commit.message, '[release] Release ') != true
    name: Default build (without Graal)
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ env.JAVA_VERSION }}
    - continue-on-error: true
      name: Run default (non-native) build
      run: ./mvnw verify -Dmrm=false -V -B -ntp -e
    - continue-on-error: true
      if: always()
      name: Upload daemon test logs
      uses: actions/upload-artifact@v4
      with:
        name: daemon-test-logs-default-build
        path: integration-tests/target/mvnd-tests/**/daemon*.log
  native-build:
    if: startsWith(github.event.head_commit.message, '[release] Release ') != true
    name: Build with Graal on ${{ matrix.os }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set vars
      run: 'OS=$(echo ''${{ runner.os }}'' | awk ''{print tolower($0)}'')

        [[ $OS == ''ubuntu'' ]] && echo "OS=linux" >> $GITHUB_ENV || echo "OS=$OS"
        >> $GITHUB_ENV

        [[ $OS == ''macos'' ]] && echo "OS=darwin" >> $GITHUB_ENV || echo "OS=$OS"
        >> $GITHUB_ENV

        echo "VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)"
        >> $GITHUB_ENV

        '
      shell: bash
    - continue-on-error: true
      name: Set up Graal
      uses: graalvm/setup-graalvm@v1
      with:
        components: native-image
        distribution: graalvm
        github-token: ${{ secrets.GITHUB_TOKEN }}
        java-version: ${{ env.JAVA_VERSION }}
    - continue-on-error: true
      name: Maven clean
      run: ./mvnw clean -Dmrm=false -V -B -ntp -e
    - continue-on-error: true
      if: ${{ env.OS == 'linux' }}
      name: Patch Graal libs for only requiring glibc 2.12
      run: "mkdir -p client/target/graalvm-libs-for-glibc-2.12\n\n: patch common libraries\n\
        ( find \"$GRAALVM_HOME/lib/static/linux-amd64/glibc\" -name '*.a'\n  ls -1\
        \ /lib/x86_64-linux-gnu/libz.a\n  ls -1 \"$GRAALVM_HOME/lib/svm/clibraries/linux-amd64/libjvm.a\"\
        \n  ls -1 \"$GRAALVM_HOME/lib/svm/clibraries/linux-amd64/liblibchelper.a\"\
        \n) | while IFS= read -r input; do\n      output=\"client/target/graalvm-libs-for-glibc-2.12/$(basename\
        \ -- \"$input\")\"\n      objcopy --redefine-syms=client/src/main/resources/glibc/glibc.redef\
        \ -- \"$input\" \"$output\" 2>/dev/null\n    done\n\n: patch gcc startfile\n\
        gcc -O3 -Os -Wall -Wextra -Werror -Wconversion -Wsign-conversion -Wcast-qual\
        \ -pedantic -c -o client/target/dynamic-libc-start.o client/src/main/resources/glibc/dynamic-libc-start.c\n\
        ld -r /lib/x86_64-linux-gnu/Scrt1.o client/target/dynamic-libc-start.o -o\
        \ client/target/graalvm-libs-for-glibc-2.12/Scrt1.o\nobjcopy --redefine-syms=client/src/main/resources/glibc/glibc.redef\
        \ client/target/graalvm-libs-for-glibc-2.12/Scrt1.o 2>/dev/null\n"
      shell: bash
    - continue-on-error: true
      name: Build native distribution
      run: ./mvnw verify -Pnative -Dmrm=false -V -B -ntp -e
    - continue-on-error: true
      if: ${{ env.OS == 'linux' }}
      name: Verify native binary for only requiring glibc 2.12
      run: '(( 4 == "$(ldd client/target/mvnd | awk ''{print $1}'' | sort -u | grep
        -c ''lib\(c\|dl\|rt\|pthread\)\.so\.[0-9]'')" )) || ( ldd client/target/mvnd
        && false )

        err=0

        objdump -T client/target/mvnd | grep GLIBC_ | grep -v ''GLIBC_\([01]\|2\.[0-9]\|2\.1[012]\)[^0-9]''
        || err=$?

        (( err == 1 ))

        '
      shell: bash
    - continue-on-error: true
      if: always()
      name: Upload daemon test logs
      uses: actions/upload-artifact@v4
      with:
        name: daemon-test-logs-${{ env.OS }}
        path: integration-tests/target/mvnd-tests/**/daemon*.log
    - continue-on-error: true
      name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: mvnd-${{ env.OS }}
        path: dist/target/maven-mvnd-*.zip
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
name: Early Access
on:
  repository_dispatch:
    types: trigger-ga___early-access.yaml
